{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\hackathon2\\\\beautyhackxs\\\\src\\\\components\\\\Ingredients.js\",\n  _s = $RefreshSig$();\nimport { useState, useRef, useEffect } from 'react';\nimport { Html5Qrcode } from 'html5-qrcode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Ingredients() {\n  _s();\n  const [barcode, setBarcode] = useState('');\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [imagePreview, setImagePreview] = useState(null);\n  const [isScanning, setIsScanning] = useState(false);\n  const [productInfo, setProductInfo] = useState(null);\n  const [chatMessages, setChatMessages] = useState([{\n    role: 'assistant',\n    content: 'Upload a product image with a barcode to get started! I can answer questions about the ingredients.'\n  }]);\n  const [userMessage, setUserMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const chatContainerRef = useRef(null);\n\n  // Mock product database\n  const productDatabase = {\n    '123456789012': {\n      name: 'Sample Face Cream',\n      brand: 'Beauty Brand',\n      ingredients: [{\n        name: 'Water',\n        purpose: 'Base',\n        concerns: []\n      }, {\n        name: 'Glycerin',\n        purpose: 'Moisturizer',\n        concerns: []\n      }, {\n        name: 'Cetearyl Alcohol',\n        purpose: 'Emulsifier',\n        concerns: ['May cause irritation in sensitive skin']\n      }, {\n        name: 'Dimethicone',\n        purpose: 'Silicone',\n        concerns: ['Environmental concerns', 'Can trap bacteria']\n      }, {\n        name: 'Fragrance',\n        purpose: 'Scent',\n        concerns: ['Common allergen', 'Potentially irritating']\n      }]\n    },\n    '987654321098': {\n      name: 'Natural Serum',\n      brand: 'Eco Beauty',\n      ingredients: [{\n        name: 'Aloe Vera Juice',\n        purpose: 'Soothing base',\n        concerns: []\n      }, {\n        name: 'Hyaluronic Acid',\n        purpose: 'Hydration',\n        concerns: []\n      }, {\n        name: 'Vitamin C',\n        purpose: 'Brightening',\n        concerns: ['Can be unstable in formulations']\n      }, {\n        name: 'Rosehip Oil',\n        purpose: 'Nourishing',\n        concerns: []\n      }]\n    }\n  };\n  useEffect(() => {\n    // Scroll to the bottom of chat when new messages are added\n    if (chatContainerRef.current) {\n      chatContainerRef.current.scrollTop = chatContainerRef.current.scrollHeight;\n    }\n  }, [chatMessages]);\n  const handleImageChange = e => {\n    if (e.target.files && e.target.files[0]) {\n      const file = e.target.files[0];\n      setSelectedImage(file);\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setImagePreview(reader.result);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n  const handleScanBarcode = async () => {\n    if (!selectedImage) return;\n    setIsScanning(true);\n    try {\n      const html5QrCode = new Html5Qrcode(\"scanner-container\");\n      const config = {\n        fps: 10\n      };\n\n      // For demonstration, we'll simulate a barcode detection\n      // In a real app, you'd use Html5Qrcode.scanFile() with the image file\n\n      // Simulate scanning for demo purposes\n      setTimeout(() => {\n        setIsScanning(false);\n\n        // For demo, we'll simulate finding one of our mock barcodes\n        const mockBarcodes = Object.keys(productDatabase);\n        const randomBarcode = mockBarcodes[Math.floor(Math.random() * mockBarcodes.length)];\n        setBarcode(randomBarcode);\n        handleProductLookup(randomBarcode);\n      }, 2000);\n\n      // In a real implementation, you would do something like:\n      /*\n      const fileReader = new FileReader();\n      fileReader.onload = async (e) => {\n        try {\n          const result = await html5QrCode.scanFile(selectedImage, true);\n          setBarcode(result);\n          handleProductLookup(result);\n        } catch (error) {\n          console.error(\"Barcode scan error:\", error);\n          setChatMessages(prev => [\n            ...prev,\n            { role: 'assistant', content: 'I couldn\\'t detect a barcode in this image. Please try another image with a clear barcode.' }\n          ]);\n        } finally {\n          setIsScanning(false);\n        }\n      };\n      fileReader.readAsArrayBuffer(selectedImage);\n      */\n    } catch (err) {\n      console.error(\"Error initializing scanner:\", err);\n      setIsScanning(false);\n    }\n  };\n  const handleClearImage = () => {\n    setSelectedImage(null);\n    setImagePreview(null);\n    setBarcode('');\n    setProductInfo(null);\n  };\n  const handleProductLookup = code => {\n    // In a real app, this would be an API call to a product database\n    setIsLoading(true);\n    setTimeout(() => {\n      const product = productDatabase[code] || {\n        name: 'Unknown Product',\n        brand: 'Unknown Brand',\n        ingredients: [{\n          name: 'Ingredient data not found',\n          purpose: '',\n          concerns: []\n        }]\n      };\n      setProductInfo(product);\n\n      // Add a message to the chat\n      setChatMessages(prev => [...prev, {\n        role: 'assistant',\n        content: `Scanned product: ${product.name} by ${product.brand}.\\nI can answer questions about the ingredients. What would you like to know?`\n      }]);\n      setIsLoading(false);\n    }, 1500);\n  };\n  const handleChatSubmit = e => {\n    e.preventDefault();\n    if (!userMessage.trim()) return;\n\n    // Add user message to chat\n    setChatMessages(prev => [...prev, {\n      role: 'user',\n      content: userMessage\n    }]);\n\n    // Clear input field\n    setUserMessage('');\n\n    // Set loading state\n    setIsLoading(true);\n\n    // In a real implementation, this would be a call to the Gemini API\n    // For now, we'll simulate a response\n    setTimeout(() => {\n      let response = \"I don't have information about this product yet. Please try scanning another product.\";\n      if (productInfo) {\n        // Basic responses based on common questions\n        if (userMessage.toLowerCase().includes('harmful')) {\n          const harmfulIngredients = productInfo.ingredients.filter(i => i.concerns.length > 0);\n          if (harmfulIngredients.length > 0) {\n            response = `I found ${harmfulIngredients.length} ingredients with potential concerns:\\n` + harmfulIngredients.map(i => `• ${i.name}: ${i.concerns.join(', ')}`).join('\\n');\n          } else {\n            response = \"I didn't identify any ingredients with known concerns in this product.\";\n          }\n        } else if (userMessage.toLowerCase().includes('ingredient')) {\n          response = `This product contains ${productInfo.ingredients.length} ingredients:\\n` + productInfo.ingredients.map(i => `• ${i.name}`).join('\\n');\n        } else if (userMessage.toLowerCase().includes('purpose') || userMessage.toLowerCase().includes('what does') || userMessage.toLowerCase().includes('what is')) {\n          response = \"Here's what each ingredient does:\\n\" + productInfo.ingredients.map(i => `• ${i.name}: ${i.purpose}`).join('\\n');\n        } else {\n          response = \"I can tell you about the ingredients in this product. You can ask if any ingredients are harmful, what each ingredient does, or for a full ingredient list.\";\n        }\n      }\n\n      // Add assistant response to chat\n      setChatMessages(prev => [...prev, {\n        role: 'assistant',\n        content: response\n      }]);\n      setIsLoading(false);\n    }, 1500);\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"ingredients-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Ingredient Checker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Upload a product image with a barcode to check ingredients and ask questions about them.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scanner-chat-layout\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"scanner-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"scanner-container\",\n          className: \"scanner-container\",\n          style: {\n            display: 'none'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"upload-container\",\n          children: !imagePreview ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"upload-box\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"image-upload\",\n              className: \"upload-label\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"upload-icon\",\n                children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                  xmlns: \"http://www.w3.org/2000/svg\",\n                  width: \"48\",\n                  height: \"48\",\n                  viewBox: \"0 0 24 24\",\n                  fill: \"none\",\n                  stroke: \"currentColor\",\n                  strokeWidth: \"2\",\n                  strokeLinecap: \"round\",\n                  strokeLinejoin: \"round\",\n                  children: [/*#__PURE__*/_jsxDEV(\"path\", {\n                    d: \"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 216,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"polyline\", {\n                    points: \"17 8 12 3 7 8\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 217,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                    x1: \"12\",\n                    y1: \"3\",\n                    x2: \"12\",\n                    y2: \"15\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 218,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Click to upload a product image with barcode\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              id: \"image-upload\",\n              accept: \"image/*\",\n              onChange: handleImageChange,\n              style: {\n                display: 'none'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"image-preview-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: imagePreview,\n              alt: \"Preview\",\n              className: \"image-preview\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"preview-actions\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"analyze-btn\",\n                onClick: handleScanBarcode,\n                disabled: isScanning,\n                children: isScanning ? 'Scanning Barcode...' : 'Scan Barcode'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"clear-btn\",\n                onClick: handleClearImage,\n                children: \"Clear\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this), barcode && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"barcode-result\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Barcode: \", barcode]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 15\n          }, this), productInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"product-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: productInfo.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Brand: \", productInfo.brand]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Beauty Buddy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Ask about the ingredients in your scanned products\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-container\",\n          ref: chatContainerRef,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-messages\",\n            children: [chatMessages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `message ${message.role}`,\n              children: message.content\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 17\n            }, this)), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message assistant loading\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"loading-dot\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"loading-dot\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"loading-dot\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleChatSubmit,\n          className: \"chat-input-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: userMessage,\n            onChange: e => setUserMessage(e.target.value),\n            placeholder: \"Ask about the ingredients...\",\n            className: \"chat-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"chat-submit\",\n            disabled: isLoading,\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 202,\n    columnNumber: 5\n  }, this);\n}\n_s(Ingredients, \"qZ9zzwChFoKPkSw3uqGl9HwxAms=\");\n_c = Ingredients;\nvar _c;\n$RefreshReg$(_c, \"Ingredients\");","map":{"version":3,"names":["useState","useRef","useEffect","Html5Qrcode","jsxDEV","_jsxDEV","Ingredients","_s","barcode","setBarcode","selectedImage","setSelectedImage","imagePreview","setImagePreview","isScanning","setIsScanning","productInfo","setProductInfo","chatMessages","setChatMessages","role","content","userMessage","setUserMessage","isLoading","setIsLoading","chatContainerRef","productDatabase","name","brand","ingredients","purpose","concerns","current","scrollTop","scrollHeight","handleImageChange","e","target","files","file","reader","FileReader","onloadend","result","readAsDataURL","handleScanBarcode","html5QrCode","config","fps","setTimeout","mockBarcodes","Object","keys","randomBarcode","Math","floor","random","length","handleProductLookup","err","console","error","handleClearImage","code","product","prev","handleChatSubmit","preventDefault","trim","response","toLowerCase","includes","harmfulIngredients","filter","i","map","join","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","style","display","htmlFor","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","points","x1","y1","x2","y2","type","accept","onChange","src","alt","onClick","disabled","ref","message","index","onSubmit","value","placeholder","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/hackathon2/beautyhackxs/src/components/Ingredients.js"],"sourcesContent":["import { useState, useRef, useEffect } from 'react';\nimport { Html5Qrcode } from 'html5-qrcode';\n\nexport default function Ingredients() {\n  const [barcode, setBarcode] = useState('');\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [imagePreview, setImagePreview] = useState(null);\n  const [isScanning, setIsScanning] = useState(false);\n  const [productInfo, setProductInfo] = useState(null);\n  const [chatMessages, setChatMessages] = useState([\n    { role: 'assistant', content: 'Upload a product image with a barcode to get started! I can answer questions about the ingredients.' }\n  ]);\n  const [userMessage, setUserMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  \n  const chatContainerRef = useRef(null);\n  \n  // Mock product database\n  const productDatabase = {\n    '123456789012': {\n      name: 'Sample Face Cream',\n      brand: 'Beauty Brand',\n      ingredients: [\n        { name: 'Water', purpose: 'Base', concerns: [] },\n        { name: 'Glycerin', purpose: 'Moisturizer', concerns: [] },\n        { name: 'Cetearyl Alcohol', purpose: 'Emulsifier', concerns: ['May cause irritation in sensitive skin'] },\n        { name: 'Dimethicone', purpose: 'Silicone', concerns: ['Environmental concerns', 'Can trap bacteria'] },\n        { name: 'Fragrance', purpose: 'Scent', concerns: ['Common allergen', 'Potentially irritating'] }\n      ]\n    },\n    '987654321098': {\n      name: 'Natural Serum',\n      brand: 'Eco Beauty',\n      ingredients: [\n        { name: 'Aloe Vera Juice', purpose: 'Soothing base', concerns: [] },\n        { name: 'Hyaluronic Acid', purpose: 'Hydration', concerns: [] },\n        { name: 'Vitamin C', purpose: 'Brightening', concerns: ['Can be unstable in formulations'] },\n        { name: 'Rosehip Oil', purpose: 'Nourishing', concerns: [] }\n      ]\n    }\n  };\n  \n  useEffect(() => {\n    // Scroll to the bottom of chat when new messages are added\n    if (chatContainerRef.current) {\n      chatContainerRef.current.scrollTop = chatContainerRef.current.scrollHeight;\n    }\n  }, [chatMessages]);\n  \n  const handleImageChange = (e) => {\n    if (e.target.files && e.target.files[0]) {\n      const file = e.target.files[0];\n      setSelectedImage(file);\n      \n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setImagePreview(reader.result);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n  \n  const handleScanBarcode = async () => {\n    if (!selectedImage) return;\n    \n    setIsScanning(true);\n    \n    try {\n      const html5QrCode = new Html5Qrcode(\"scanner-container\");\n      const config = { fps: 10 };\n      \n      // For demonstration, we'll simulate a barcode detection\n      // In a real app, you'd use Html5Qrcode.scanFile() with the image file\n      \n      // Simulate scanning for demo purposes\n      setTimeout(() => {\n        setIsScanning(false);\n        \n        // For demo, we'll simulate finding one of our mock barcodes\n        const mockBarcodes = Object.keys(productDatabase);\n        const randomBarcode = mockBarcodes[Math.floor(Math.random() * mockBarcodes.length)];\n        \n        setBarcode(randomBarcode);\n        handleProductLookup(randomBarcode);\n      }, 2000);\n      \n      // In a real implementation, you would do something like:\n      /*\n      const fileReader = new FileReader();\n      fileReader.onload = async (e) => {\n        try {\n          const result = await html5QrCode.scanFile(selectedImage, true);\n          setBarcode(result);\n          handleProductLookup(result);\n        } catch (error) {\n          console.error(\"Barcode scan error:\", error);\n          setChatMessages(prev => [\n            ...prev,\n            { role: 'assistant', content: 'I couldn\\'t detect a barcode in this image. Please try another image with a clear barcode.' }\n          ]);\n        } finally {\n          setIsScanning(false);\n        }\n      };\n      fileReader.readAsArrayBuffer(selectedImage);\n      */\n    } catch (err) {\n      console.error(\"Error initializing scanner:\", err);\n      setIsScanning(false);\n    }\n  };\n  \n  const handleClearImage = () => {\n    setSelectedImage(null);\n    setImagePreview(null);\n    setBarcode('');\n    setProductInfo(null);\n  };\n  \n  const handleProductLookup = (code) => {\n    // In a real app, this would be an API call to a product database\n    setIsLoading(true);\n    \n    setTimeout(() => {\n      const product = productDatabase[code] || {\n        name: 'Unknown Product',\n        brand: 'Unknown Brand',\n        ingredients: [\n          { name: 'Ingredient data not found', purpose: '', concerns: [] }\n        ]\n      };\n      \n      setProductInfo(product);\n      \n      // Add a message to the chat\n      setChatMessages(prev => [\n        ...prev,\n        { \n          role: 'assistant', \n          content: `Scanned product: ${product.name} by ${product.brand}.\\nI can answer questions about the ingredients. What would you like to know?` \n        }\n      ]);\n      \n      setIsLoading(false);\n    }, 1500);\n  };\n  \n  const handleChatSubmit = (e) => {\n    e.preventDefault();\n    \n    if (!userMessage.trim()) return;\n    \n    // Add user message to chat\n    setChatMessages(prev => [\n      ...prev,\n      { role: 'user', content: userMessage }\n    ]);\n    \n    // Clear input field\n    setUserMessage('');\n    \n    // Set loading state\n    setIsLoading(true);\n    \n    // In a real implementation, this would be a call to the Gemini API\n    // For now, we'll simulate a response\n    setTimeout(() => {\n      let response = \"I don't have information about this product yet. Please try scanning another product.\";\n      \n      if (productInfo) {\n        // Basic responses based on common questions\n        if (userMessage.toLowerCase().includes('harmful')) {\n          const harmfulIngredients = productInfo.ingredients.filter(i => i.concerns.length > 0);\n          if (harmfulIngredients.length > 0) {\n            response = `I found ${harmfulIngredients.length} ingredients with potential concerns:\\n` +\n              harmfulIngredients.map(i => `• ${i.name}: ${i.concerns.join(', ')}`).join('\\n');\n          } else {\n            response = \"I didn't identify any ingredients with known concerns in this product.\";\n          }\n        } else if (userMessage.toLowerCase().includes('ingredient')) {\n          response = `This product contains ${productInfo.ingredients.length} ingredients:\\n` +\n            productInfo.ingredients.map(i => `• ${i.name}`).join('\\n');\n        } else if (userMessage.toLowerCase().includes('purpose') || userMessage.toLowerCase().includes('what does') || userMessage.toLowerCase().includes('what is')) {\n          response = \"Here's what each ingredient does:\\n\" +\n            productInfo.ingredients.map(i => `• ${i.name}: ${i.purpose}`).join('\\n');\n        } else {\n          response = \"I can tell you about the ingredients in this product. You can ask if any ingredients are harmful, what each ingredient does, or for a full ingredient list.\";\n        }\n      }\n      \n      // Add assistant response to chat\n      setChatMessages(prev => [\n        ...prev,\n        { role: 'assistant', content: response }\n      ]);\n      \n      setIsLoading(false);\n    }, 1500);\n  };\n  \n  return (\n    <section className=\"ingredients-container\">\n      <h1>Ingredient Checker</h1>\n      <p>Upload a product image with a barcode to check ingredients and ask questions about them.</p>\n      \n      <div className=\"scanner-chat-layout\">\n        <div className=\"scanner-section\">\n          <div id=\"scanner-container\" className=\"scanner-container\" style={{display: 'none'}}></div>\n          \n          <div className=\"upload-container\">\n            {!imagePreview ? (\n              <div className=\"upload-box\">\n                <label htmlFor=\"image-upload\" className=\"upload-label\">\n                  <div className=\"upload-icon\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                      <path d=\"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4\"></path>\n                      <polyline points=\"17 8 12 3 7 8\"></polyline>\n                      <line x1=\"12\" y1=\"3\" x2=\"12\" y2=\"15\"></line>\n                    </svg>\n                  </div>\n                  <p>Click to upload a product image with barcode</p>\n                </label>\n                <input \n                  type=\"file\" \n                  id=\"image-upload\" \n                  accept=\"image/*\" \n                  onChange={handleImageChange} \n                  style={{ display: 'none' }}\n                />\n              </div>\n            ) : (\n              <div className=\"image-preview-container\">\n                <img src={imagePreview} alt=\"Preview\" className=\"image-preview\" />\n                <div className=\"preview-actions\">\n                  <button \n                    className=\"analyze-btn\" \n                    onClick={handleScanBarcode}\n                    disabled={isScanning}\n                  >\n                    {isScanning ? 'Scanning Barcode...' : 'Scan Barcode'}\n                  </button>\n                  <button className=\"clear-btn\" onClick={handleClearImage}>\n                    Clear\n                  </button>\n                </div>\n              </div>\n            )}\n          </div>\n          \n          {barcode && (\n            <div className=\"barcode-result\">\n              <p>Barcode: {barcode}</p>\n              {productInfo && (\n                <div className=\"product-info\">\n                  <h3>{productInfo.name}</h3>\n                  <p>Brand: {productInfo.brand}</p>\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n        \n        <div className=\"chat-section\">\n          <h2>Beauty Buddy</h2>\n          <p>Ask about the ingredients in your scanned products</p>\n          \n          <div className=\"chat-container\" ref={chatContainerRef}>\n            <div className=\"chat-messages\">\n              {chatMessages.map((message, index) => (\n                <div key={index} className={`message ${message.role}`}>\n                  {message.content}\n                </div>\n              ))}\n              {isLoading && (\n                <div className=\"message assistant loading\">\n                  <span className=\"loading-dot\"></span>\n                  <span className=\"loading-dot\"></span>\n                  <span className=\"loading-dot\"></span>\n                </div>\n              )}\n            </div>\n          </div>\n          \n          <form onSubmit={handleChatSubmit} className=\"chat-input-form\">\n            <input\n              type=\"text\"\n              value={userMessage}\n              onChange={(e) => setUserMessage(e.target.value)}\n              placeholder=\"Ask about the ingredients...\"\n              className=\"chat-input\"\n            />\n            <button type=\"submit\" className=\"chat-submit\" disabled={isLoading}>\n              Send\n            </button>\n          </form>\n        </div>\n      </div>\n    </section>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}