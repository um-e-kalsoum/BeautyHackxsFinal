{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\hackathon2\\\\beautyhackxs\\\\src\\\\components\\\\Camera.js\",\n  _s = $RefreshSig$();\nimport { useState, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FacialScanner() {\n  _s();\n  const [imageData, setImageData] = useState(null);\n  const [isAnalyzing, setIsAnalyzing] = useState(false);\n  const [analysisResult, setAnalysisResult] = useState(null);\n  const [chatMessages, setChatMessages] = useState([]);\n  const [userMessage, setUserMessage] = useState('');\n  const fileInputRef = useRef(null);\n  const handleImageUpload = e => {\n    const file = e.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = event => {\n        setImageData(event.target.result);\n        analyzeFace(event.target.result);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n  const analyzeFace = imageData => {\n    setIsAnalyzing(true);\n\n    // Simulating API call to Gemini for facial analysis\n    setTimeout(() => {\n      // Sample analysis result - in a real app, this would come from the Gemini API\n      const sampleAnalysis = {\n        skinType: \"Combination\",\n        features: [\"Oval face shape\", \"Potential dryness around T-zone\", \"Even skin tone with slight redness on cheeks\"],\n        recommendations: [\"Consider hydrating serums with hyaluronic acid\", \"A gentle cleanser would be suitable for your skin type\", \"Sun protection is recommended based on your complexion\"]\n      };\n      setAnalysisResult(sampleAnalysis);\n      setIsAnalyzing(false);\n\n      // Add the initial analysis as a system message\n      setChatMessages([{\n        sender: 'system',\n        text: 'Face analysis complete. I can answer questions about your facial features and provide skincare recommendations.'\n      }]);\n    }, 2000);\n  };\n  const handleChatSubmit = e => {\n    e.preventDefault();\n    if (!userMessage.trim()) return;\n\n    // Add user message to chat\n    const newMessages = [...chatMessages, {\n      sender: 'user',\n      text: userMessage\n    }];\n    setChatMessages(newMessages);\n\n    // Simulate Gemini response\n    setTimeout(() => {\n      let aiResponse = \"I'm analyzing your query...\";\n      if (userMessage.toLowerCase().includes(\"skin type\")) {\n        aiResponse = \"Based on the facial analysis, you have combination skin. This means some areas of your face may be oily (typically the T-zone) while other areas are normal or dry. I recommend using gentle, non-stripping cleansers and applying moisturizer targeted to each zone.\";\n      } else if (userMessage.toLowerCase().includes(\"recommend\") || userMessage.toLowerCase().includes(\"product\")) {\n        aiResponse = \"For your skin type, I'd recommend using a gentle foaming cleanser, a hydrating serum with hyaluronic acid, and a lightweight moisturizer. You might also benefit from occasional clay masks on your T-zone.\";\n      } else if (userMessage.toLowerCase().includes(\"face shape\")) {\n        aiResponse = \"Your face appears to have an oval shape, which is considered versatile for many hairstyles and makeup looks. This shape is characterized by balanced proportions and a slightly narrower forehead and jawline.\";\n      } else {\n        aiResponse = \"Based on your facial analysis, I can provide specific skincare and beauty recommendations tailored to your features. Could you specify what aspect you'd like to know more about? (skin type, suitable products, makeup tips, etc.)\";\n      }\n      setChatMessages([...newMessages, {\n        sender: 'ai',\n        text: aiResponse\n      }]);\n    }, 1000);\n    setUserMessage('');\n  };\n  const triggerFileInput = () => {\n    fileInputRef.current.click();\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"facial-scanner-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Facial Analysis Scanner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Upload a photo of your face to get personalized beauty and skincare recommendations.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scanner-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-upload-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \"image/*\",\n          onChange: handleImageUpload,\n          ref: fileInputRef,\n          style: {\n            display: 'none'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), imageData ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"uploaded-image-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: imageData,\n            alt: \"Uploaded face\",\n            className: \"uploaded-face\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 15\n          }, this), isAnalyzing && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"analyzing-overlay\",\n            children: \"Analyzing...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 31\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"upload-placeholder\",\n          onClick: triggerFileInput,\n          children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            width: \"60\",\n            height: \"60\",\n            viewBox: \"0 0 24 24\",\n            fill: \"none\",\n            stroke: \"#999\",\n            strokeWidth: \"1.5\",\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            children: [/*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M23 19a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h4l2-3h6l2 3h4a2 2 0 0 1 2 2z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n              cx: \"12\",\n              cy: \"13\",\n              r: \"4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Click to upload a face image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn primary-btn upload-btn\",\n          onClick: triggerFileInput,\n          children: \"Upload Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), analysisResult && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"analysis-chat-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"analysis-results\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Face Analysis Results\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Skin Type:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 18\n            }, this), \" \", analysisResult.skinType]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"features\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Features:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: analysisResult.features.map((feature, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: feature\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"recommendations\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Initial Recommendations:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: analysisResult.recommendations.map((rec, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: rec\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Ask Beauty Assistant\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-messages\",\n            children: chatMessages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `message ${msg.sender}`,\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: msg.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 21\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleChatSubmit,\n            className: \"chat-input\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: userMessage,\n              onChange: e => setUserMessage(e.target.value),\n              placeholder: \"Ask about your facial features...\",\n              className: \"chat-text-input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"chat-send-btn\",\n              children: \"Send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n}\n_s(FacialScanner, \"wLgl+XZjYDIMMQV+UM9a5XmUreY=\");\n_c = FacialScanner;\nvar _c;\n$RefreshReg$(_c, \"FacialScanner\");","map":{"version":3,"names":["useState","useRef","jsxDEV","_jsxDEV","FacialScanner","_s","imageData","setImageData","isAnalyzing","setIsAnalyzing","analysisResult","setAnalysisResult","chatMessages","setChatMessages","userMessage","setUserMessage","fileInputRef","handleImageUpload","e","file","target","files","reader","FileReader","onload","event","result","analyzeFace","readAsDataURL","setTimeout","sampleAnalysis","skinType","features","recommendations","sender","text","handleChatSubmit","preventDefault","trim","newMessages","aiResponse","toLowerCase","includes","triggerFileInput","current","click","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","ref","style","display","src","alt","onClick","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","cx","cy","r","map","feature","index","rec","msg","onSubmit","value","placeholder","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/hackathon2/beautyhackxs/src/components/Camera.js"],"sourcesContent":["import { useState, useRef } from 'react';\r\n\r\nexport default function FacialScanner() {\r\n  const [imageData, setImageData] = useState(null);\r\n  const [isAnalyzing, setIsAnalyzing] = useState(false);\r\n  const [analysisResult, setAnalysisResult] = useState(null);\r\n  const [chatMessages, setChatMessages] = useState([]);\r\n  const [userMessage, setUserMessage] = useState('');\r\n  const fileInputRef = useRef(null);\r\n  \r\n  const handleImageUpload = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      const reader = new FileReader();\r\n      reader.onload = (event) => {\r\n        setImageData(event.target.result);\r\n        analyzeFace(event.target.result);\r\n      };\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  const analyzeFace = (imageData) => {\r\n    setIsAnalyzing(true);\r\n    \r\n    // Simulating API call to Gemini for facial analysis\r\n    setTimeout(() => {\r\n      // Sample analysis result - in a real app, this would come from the Gemini API\r\n      const sampleAnalysis = {\r\n        skinType: \"Combination\",\r\n        features: [\r\n          \"Oval face shape\",\r\n          \"Potential dryness around T-zone\",\r\n          \"Even skin tone with slight redness on cheeks\"\r\n        ],\r\n        recommendations: [\r\n          \"Consider hydrating serums with hyaluronic acid\",\r\n          \"A gentle cleanser would be suitable for your skin type\",\r\n          \"Sun protection is recommended based on your complexion\"\r\n        ]\r\n      };\r\n      \r\n      setAnalysisResult(sampleAnalysis);\r\n      setIsAnalyzing(false);\r\n      \r\n      // Add the initial analysis as a system message\r\n      setChatMessages([\r\n        { \r\n          sender: 'system', \r\n          text: 'Face analysis complete. I can answer questions about your facial features and provide skincare recommendations.'\r\n        }\r\n      ]);\r\n    }, 2000);\r\n  };\r\n\r\n  const handleChatSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!userMessage.trim()) return;\r\n    \r\n    // Add user message to chat\r\n    const newMessages = [\r\n      ...chatMessages,\r\n      { sender: 'user', text: userMessage }\r\n    ];\r\n    setChatMessages(newMessages);\r\n    \r\n    // Simulate Gemini response\r\n    setTimeout(() => {\r\n      let aiResponse = \"I'm analyzing your query...\";\r\n      \r\n      if (userMessage.toLowerCase().includes(\"skin type\")) {\r\n        aiResponse = \"Based on the facial analysis, you have combination skin. This means some areas of your face may be oily (typically the T-zone) while other areas are normal or dry. I recommend using gentle, non-stripping cleansers and applying moisturizer targeted to each zone.\";\r\n      } else if (userMessage.toLowerCase().includes(\"recommend\") || userMessage.toLowerCase().includes(\"product\")) {\r\n        aiResponse = \"For your skin type, I'd recommend using a gentle foaming cleanser, a hydrating serum with hyaluronic acid, and a lightweight moisturizer. You might also benefit from occasional clay masks on your T-zone.\";\r\n      } else if (userMessage.toLowerCase().includes(\"face shape\")) {\r\n        aiResponse = \"Your face appears to have an oval shape, which is considered versatile for many hairstyles and makeup looks. This shape is characterized by balanced proportions and a slightly narrower forehead and jawline.\";\r\n      } else {\r\n        aiResponse = \"Based on your facial analysis, I can provide specific skincare and beauty recommendations tailored to your features. Could you specify what aspect you'd like to know more about? (skin type, suitable products, makeup tips, etc.)\";\r\n      }\r\n      \r\n      setChatMessages([\r\n        ...newMessages,\r\n        { sender: 'ai', text: aiResponse }\r\n      ]);\r\n    }, 1000);\r\n    \r\n    setUserMessage('');\r\n  };\r\n\r\n  const triggerFileInput = () => {\r\n    fileInputRef.current.click();\r\n  };\r\n  \r\n  return (\r\n    <section className=\"facial-scanner-container\">\r\n      <h1>Facial Analysis Scanner</h1>\r\n      <p>Upload a photo of your face to get personalized beauty and skincare recommendations.</p>\r\n      \r\n      <div className=\"scanner-content\">\r\n        <div className=\"image-upload-section\">\r\n          <input \r\n            type=\"file\" \r\n            accept=\"image/*\" \r\n            onChange={handleImageUpload} \r\n            ref={fileInputRef}\r\n            style={{ display: 'none' }}\r\n          />\r\n          \r\n          {imageData ? (\r\n            <div className=\"uploaded-image-container\">\r\n              <img src={imageData} alt=\"Uploaded face\" className=\"uploaded-face\" />\r\n              {isAnalyzing && <div className=\"analyzing-overlay\">Analyzing...</div>}\r\n            </div>\r\n          ) : (\r\n            <div className=\"upload-placeholder\" onClick={triggerFileInput}>\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"60\" height=\"60\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#999\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n                <path d=\"M23 19a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h4l2-3h6l2 3h4a2 2 0 0 1 2 2z\"></path>\r\n                <circle cx=\"12\" cy=\"13\" r=\"4\"></circle>\r\n              </svg>\r\n              <p>Click to upload a face image</p>\r\n            </div>\r\n          )}\r\n          \r\n          <button \r\n            className=\"btn primary-btn upload-btn\"\r\n            onClick={triggerFileInput}\r\n          >\r\n            Upload Image\r\n          </button>\r\n        </div>\r\n        \r\n        {analysisResult && (\r\n          <div className=\"analysis-chat-section\">\r\n            <div className=\"analysis-results\">\r\n              <h3>Face Analysis Results</h3>\r\n              <p><strong>Skin Type:</strong> {analysisResult.skinType}</p>\r\n              <div className=\"features\">\r\n                <h4>Features:</h4>\r\n                <ul>\r\n                  {analysisResult.features.map((feature, index) => (\r\n                    <li key={index}>{feature}</li>\r\n                  ))}\r\n                </ul>\r\n              </div>\r\n              <div className=\"recommendations\">\r\n                <h4>Initial Recommendations:</h4>\r\n                <ul>\r\n                  {analysisResult.recommendations.map((rec, index) => (\r\n                    <li key={index}>{rec}</li>\r\n                  ))}\r\n                </ul>\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"chat-container\">\r\n              <h3>Ask Beauty Assistant</h3>\r\n              <div className=\"chat-messages\">\r\n                {chatMessages.map((msg, index) => (\r\n                  <div key={index} className={`message ${msg.sender}`}>\r\n                    <p>{msg.text}</p>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n              \r\n              <form onSubmit={handleChatSubmit} className=\"chat-input\">\r\n                <input\r\n                  type=\"text\"\r\n                  value={userMessage}\r\n                  onChange={(e) => setUserMessage(e.target.value)}\r\n                  placeholder=\"Ask about your facial features...\"\r\n                  className=\"chat-text-input\"\r\n                />\r\n                <button type=\"submit\" className=\"chat-send-btn\">Send</button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}