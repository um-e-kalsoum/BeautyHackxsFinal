{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\hackathon2\\\\beautyhackxs\\\\src\\\\components\\\\FacialScanner.js\",\n  _s = $RefreshSig$();\nimport { useState, useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FacialScanner() {\n  _s();\n  const [imageData, setImageData] = useState(null);\n  const [isAnalyzing, setIsAnalyzing] = useState(false);\n  const [analysisResult, setAnalysisResult] = useState(null);\n  const [chatMessages, setChatMessages] = useState([]);\n  const [userMessage, setUserMessage] = useState('');\n  const [cameraActive, setCameraActive] = useState(false);\n  const fileInputRef = useRef(null);\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const streamRef = useRef(null);\n  useEffect(() => {\n    // Clean up camera stream when component unmounts\n    return () => {\n      if (streamRef.current) {\n        streamRef.current.getTracks().forEach(track => track.stop());\n      }\n    };\n  }, []);\n  const handleImageUpload = e => {\n    const file = e.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = event => {\n        setImageData(event.target.result);\n        analyzeFace(event.target.result);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n  const analyzeFace = imageData => {\n    setIsAnalyzing(true);\n\n    // Simulating API call to Gemini for facial analysis\n    setTimeout(() => {\n      // Sample analysis result - in a real app, this would come from the Gemini API\n      const sampleAnalysis = {\n        skinType: \"Combination\",\n        features: [\"Oval face shape\", \"Potential dryness around T-zone\", \"Even skin tone with slight redness on cheeks\"],\n        recommendations: [\"Consider hydrating serums with hyaluronic acid\", \"A gentle cleanser would be suitable for your skin type\", \"Sun protection is recommended based on your complexion\"]\n      };\n      setAnalysisResult(sampleAnalysis);\n      setIsAnalyzing(false);\n\n      // Add the initial analysis as a system message\n      setChatMessages([{\n        sender: 'system',\n        text: 'Face analysis complete. I can answer questions about your facial features and provide skincare recommendations.'\n      }]);\n    }, 2000);\n  };\n  const handleChatSubmit = e => {\n    e.preventDefault();\n    if (!userMessage.trim()) return;\n\n    // Add user message to chat\n    const newMessages = [...chatMessages, {\n      sender: 'user',\n      text: userMessage\n    }];\n    setChatMessages(newMessages);\n\n    // Simulate Gemini response\n    setTimeout(() => {\n      let aiResponse = \"I'm analyzing your query...\";\n      if (userMessage.toLowerCase().includes(\"skin type\")) {\n        aiResponse = \"Based on the facial analysis, you have combination skin. This means some areas of your face may be oily (typically the T-zone) while other areas are normal or dry. I recommend using gentle, non-stripping cleansers and applying moisturizer targeted to each zone.\";\n      } else if (userMessage.toLowerCase().includes(\"recommend\") || userMessage.toLowerCase().includes(\"product\")) {\n        aiResponse = \"For your skin type, I'd recommend using a gentle foaming cleanser, a hydrating serum with hyaluronic acid, and a lightweight moisturizer. You might also benefit from occasional clay masks on your T-zone.\";\n      } else if (userMessage.toLowerCase().includes(\"face shape\")) {\n        aiResponse = \"Your face appears to have an oval shape, which is considered versatile for many hairstyles and makeup looks. This shape is characterized by balanced proportions and a slightly narrower forehead and jawline.\";\n      } else {\n        aiResponse = \"Based on your facial analysis, I can provide specific skincare and beauty recommendations tailored to your features. Could you specify what aspect you'd like to know more about? (skin type, suitable products, makeup tips, etc.)\";\n      }\n      setChatMessages([...newMessages, {\n        sender: 'ai',\n        text: aiResponse\n      }]);\n    }, 1000);\n    setUserMessage('');\n  };\n  const triggerFileInput = () => {\n    fileInputRef.current.click();\n  };\n  const startCamera = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: {\n          facingMode: 'user'\n        }\n      });\n      if (videoRef.current) {\n        videoRef.current.srcObject = stream;\n        streamRef.current = stream;\n      }\n      setCameraActive(true);\n    } catch (error) {\n      console.error(\"Error accessing camera:\", error);\n      alert(\"Could not access camera. Please ensure you've granted permission.\");\n    }\n  };\n  const stopCamera = () => {\n    if (streamRef.current) {\n      streamRef.current.getTracks().forEach(track => track.stop());\n    }\n    if (videoRef.current) {\n      videoRef.current.srcObject = null;\n    }\n    setCameraActive(false);\n  };\n  const captureFace = () => {\n    if (!videoRef.current || !canvasRef.current) return;\n    const video = videoRef.current;\n    const canvas = canvasRef.current;\n\n    // Set canvas size to match video\n    canvas.width = video.videoWidth;\n    canvas.height = video.videoHeight;\n\n    // Draw video frame to canvas\n    const ctx = canvas.getContext('2d');\n    ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\n\n    // Get image data\n    const capturedImage = canvas.toDataURL('image/jpeg');\n    setImageData(capturedImage);\n\n    // Stop camera\n    stopCamera();\n\n    // Analyze the captured face\n    analyzeFace(capturedImage);\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"facial-scanner-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Facial Analysis Scanner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Upload or capture a photo of your face to get personalized beauty and skincare recommendations.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scanner-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-upload-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \"image/*\",\n          onChange: handleImageUpload,\n          ref: fileInputRef,\n          style: {\n            display: 'none'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), cameraActive ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"camera-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"video\", {\n            ref: videoRef,\n            autoPlay: true,\n            playsInline: true,\n            className: \"camera-feed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn primary-btn capture-btn\",\n            onClick: captureFace,\n            children: \"Capture Face\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn secondary-btn\",\n            onClick: stopCamera,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n            ref: canvasRef,\n            style: {\n              display: 'none'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }, this) : imageData ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"uploaded-image-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: imageData,\n            alt: \"Uploaded face\",\n            className: \"uploaded-face\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 15\n          }, this), isAnalyzing && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"analyzing-overlay\",\n            children: \"Analyzing...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 31\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"upload-placeholder\",\n          onClick: triggerFileInput,\n          children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            width: \"60\",\n            height: \"60\",\n            viewBox: \"0 0 24 24\",\n            fill: \"none\",\n            stroke: \"#999\",\n            strokeWidth: \"1.5\",\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            children: [/*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M23 19a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h4l2-3h6l2 3h4a2 2 0 0 1 2 2z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n              cx: \"12\",\n              cy: \"13\",\n              r: \"4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Click to upload a face image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }, this), !cameraActive && !imageData && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"scanner-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn primary-btn upload-btn\",\n            onClick: triggerFileInput,\n            children: \"Upload Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn secondary-btn camera-btn\",\n            onClick: startCamera,\n            children: \"Use Camera\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), analysisResult && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"analysis-chat-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"analysis-results\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Face Analysis Results\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Skin Type:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 18\n            }, this), \" \", analysisResult.skinType]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"features\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Features:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: analysisResult.features.map((feature, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: feature\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"recommendations\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Initial Recommendations:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: analysisResult.recommendations.map((rec, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: rec\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Ask Beauty Assistant\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-messages\",\n            children: chatMessages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `message ${msg.sender}`,\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: msg.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 21\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleChatSubmit,\n            className: \"chat-input\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: userMessage,\n              onChange: e => setUserMessage(e.target.value),\n              placeholder: \"Ask about your facial features...\",\n              className: \"chat-text-input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"chat-send-btn\",\n              children: \"Send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 5\n  }, this);\n}\n_s(FacialScanner, \"CXoJGUNhFwf7W3lLqDvST/Gu/n8=\");\n_c = FacialScanner;\nvar _c;\n$RefreshReg$(_c, \"FacialScanner\");","map":{"version":3,"names":["useState","useRef","useEffect","jsxDEV","_jsxDEV","FacialScanner","_s","imageData","setImageData","isAnalyzing","setIsAnalyzing","analysisResult","setAnalysisResult","chatMessages","setChatMessages","userMessage","setUserMessage","cameraActive","setCameraActive","fileInputRef","videoRef","canvasRef","streamRef","current","getTracks","forEach","track","stop","handleImageUpload","e","file","target","files","reader","FileReader","onload","event","result","analyzeFace","readAsDataURL","setTimeout","sampleAnalysis","skinType","features","recommendations","sender","text","handleChatSubmit","preventDefault","trim","newMessages","aiResponse","toLowerCase","includes","triggerFileInput","click","startCamera","stream","navigator","mediaDevices","getUserMedia","video","facingMode","srcObject","error","console","alert","stopCamera","captureFace","canvas","width","videoWidth","height","videoHeight","ctx","getContext","drawImage","capturedImage","toDataURL","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","ref","style","display","autoPlay","playsInline","onClick","src","alt","xmlns","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","cx","cy","r","map","feature","index","rec","msg","onSubmit","value","placeholder","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/hackathon2/beautyhackxs/src/components/FacialScanner.js"],"sourcesContent":["import { useState, useRef, useEffect } from 'react';\r\n\r\nexport default function FacialScanner() {\r\n  const [imageData, setImageData] = useState(null);\r\n  const [isAnalyzing, setIsAnalyzing] = useState(false);\r\n  const [analysisResult, setAnalysisResult] = useState(null);\r\n  const [chatMessages, setChatMessages] = useState([]);\r\n  const [userMessage, setUserMessage] = useState('');\r\n  const [cameraActive, setCameraActive] = useState(false);\r\n  \r\n  const fileInputRef = useRef(null);\r\n  const videoRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n  const streamRef = useRef(null);\r\n  \r\n  useEffect(() => {\r\n    // Clean up camera stream when component unmounts\r\n    return () => {\r\n      if (streamRef.current) {\r\n        streamRef.current.getTracks().forEach(track => track.stop());\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  const handleImageUpload = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      const reader = new FileReader();\r\n      reader.onload = (event) => {\r\n        setImageData(event.target.result);\r\n        analyzeFace(event.target.result);\r\n      };\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  const analyzeFace = (imageData) => {\r\n    setIsAnalyzing(true);\r\n    \r\n    // Simulating API call to Gemini for facial analysis\r\n    setTimeout(() => {\r\n      // Sample analysis result - in a real app, this would come from the Gemini API\r\n      const sampleAnalysis = {\r\n        skinType: \"Combination\",\r\n        features: [\r\n          \"Oval face shape\",\r\n          \"Potential dryness around T-zone\",\r\n          \"Even skin tone with slight redness on cheeks\"\r\n        ],\r\n        recommendations: [\r\n          \"Consider hydrating serums with hyaluronic acid\",\r\n          \"A gentle cleanser would be suitable for your skin type\",\r\n          \"Sun protection is recommended based on your complexion\"\r\n        ]\r\n      };\r\n      \r\n      setAnalysisResult(sampleAnalysis);\r\n      setIsAnalyzing(false);\r\n      \r\n      // Add the initial analysis as a system message\r\n      setChatMessages([\r\n        { \r\n          sender: 'system', \r\n          text: 'Face analysis complete. I can answer questions about your facial features and provide skincare recommendations.'\r\n        }\r\n      ]);\r\n    }, 2000);\r\n  };\r\n\r\n  const handleChatSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!userMessage.trim()) return;\r\n    \r\n    // Add user message to chat\r\n    const newMessages = [\r\n      ...chatMessages,\r\n      { sender: 'user', text: userMessage }\r\n    ];\r\n    setChatMessages(newMessages);\r\n    \r\n    // Simulate Gemini response\r\n    setTimeout(() => {\r\n      let aiResponse = \"I'm analyzing your query...\";\r\n      \r\n      if (userMessage.toLowerCase().includes(\"skin type\")) {\r\n        aiResponse = \"Based on the facial analysis, you have combination skin. This means some areas of your face may be oily (typically the T-zone) while other areas are normal or dry. I recommend using gentle, non-stripping cleansers and applying moisturizer targeted to each zone.\";\r\n      } else if (userMessage.toLowerCase().includes(\"recommend\") || userMessage.toLowerCase().includes(\"product\")) {\r\n        aiResponse = \"For your skin type, I'd recommend using a gentle foaming cleanser, a hydrating serum with hyaluronic acid, and a lightweight moisturizer. You might also benefit from occasional clay masks on your T-zone.\";\r\n      } else if (userMessage.toLowerCase().includes(\"face shape\")) {\r\n        aiResponse = \"Your face appears to have an oval shape, which is considered versatile for many hairstyles and makeup looks. This shape is characterized by balanced proportions and a slightly narrower forehead and jawline.\";\r\n      } else {\r\n        aiResponse = \"Based on your facial analysis, I can provide specific skincare and beauty recommendations tailored to your features. Could you specify what aspect you'd like to know more about? (skin type, suitable products, makeup tips, etc.)\";\r\n      }\r\n      \r\n      setChatMessages([\r\n        ...newMessages,\r\n        { sender: 'ai', text: aiResponse }\r\n      ]);\r\n    }, 1000);\r\n    \r\n    setUserMessage('');\r\n  };\r\n\r\n  const triggerFileInput = () => {\r\n    fileInputRef.current.click();\r\n  };\r\n  \r\n  const startCamera = async () => {\r\n    try {\r\n      const stream = await navigator.mediaDevices.getUserMedia({ \r\n        video: { facingMode: 'user' }\r\n      });\r\n      \r\n      if (videoRef.current) {\r\n        videoRef.current.srcObject = stream;\r\n        streamRef.current = stream;\r\n      }\r\n      \r\n      setCameraActive(true);\r\n    } catch (error) {\r\n      console.error(\"Error accessing camera:\", error);\r\n      alert(\"Could not access camera. Please ensure you've granted permission.\");\r\n    }\r\n  };\r\n  \r\n  const stopCamera = () => {\r\n    if (streamRef.current) {\r\n      streamRef.current.getTracks().forEach(track => track.stop());\r\n    }\r\n    if (videoRef.current) {\r\n      videoRef.current.srcObject = null;\r\n    }\r\n    setCameraActive(false);\r\n  };\r\n  \r\n  const captureFace = () => {\r\n    if (!videoRef.current || !canvasRef.current) return;\r\n    \r\n    const video = videoRef.current;\r\n    const canvas = canvasRef.current;\r\n    \r\n    // Set canvas size to match video\r\n    canvas.width = video.videoWidth;\r\n    canvas.height = video.videoHeight;\r\n    \r\n    // Draw video frame to canvas\r\n    const ctx = canvas.getContext('2d');\r\n    ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\r\n    \r\n    // Get image data\r\n    const capturedImage = canvas.toDataURL('image/jpeg');\r\n    setImageData(capturedImage);\r\n    \r\n    // Stop camera\r\n    stopCamera();\r\n    \r\n    // Analyze the captured face\r\n    analyzeFace(capturedImage);\r\n  };\r\n  \r\n  return (\r\n    <section className=\"facial-scanner-container\">\r\n      <h1>Facial Analysis Scanner</h1>\r\n      <p>Upload or capture a photo of your face to get personalized beauty and skincare recommendations.</p>\r\n      \r\n      <div className=\"scanner-content\">\r\n        <div className=\"image-upload-section\">\r\n          <input \r\n            type=\"file\" \r\n            accept=\"image/*\" \r\n            onChange={handleImageUpload} \r\n            ref={fileInputRef}\r\n            style={{ display: 'none' }}\r\n          />\r\n          \r\n          {cameraActive ? (\r\n            <div className=\"camera-container\">\r\n              <video \r\n                ref={videoRef} \r\n                autoPlay \r\n                playsInline \r\n                className=\"camera-feed\"\r\n              />\r\n              <button \r\n                className=\"btn primary-btn capture-btn\"\r\n                onClick={captureFace}\r\n              >\r\n                Capture Face\r\n              </button>\r\n              <button \r\n                className=\"btn secondary-btn\"\r\n                onClick={stopCamera}\r\n              >\r\n                Cancel\r\n              </button>\r\n              <canvas ref={canvasRef} style={{ display: 'none' }} />\r\n            </div>\r\n          ) : imageData ? (\r\n            <div className=\"uploaded-image-container\">\r\n              <img src={imageData} alt=\"Uploaded face\" className=\"uploaded-face\" />\r\n              {isAnalyzing && <div className=\"analyzing-overlay\">Analyzing...</div>}\r\n            </div>\r\n          ) : (\r\n            <div className=\"upload-placeholder\" onClick={triggerFileInput}>\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"60\" height=\"60\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#999\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n                <path d=\"M23 19a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h4l2-3h6l2 3h4a2 2 0 0 1 2 2z\"></path>\r\n                <circle cx=\"12\" cy=\"13\" r=\"4\"></circle>\r\n              </svg>\r\n              <p>Click to upload a face image</p>\r\n            </div>\r\n          )}\r\n          \r\n          {!cameraActive && !imageData && (\r\n            <div className=\"scanner-controls\">\r\n              <button \r\n                className=\"btn primary-btn upload-btn\"\r\n                onClick={triggerFileInput}\r\n              >\r\n                Upload Image\r\n              </button>\r\n              <button \r\n                className=\"btn secondary-btn camera-btn\"\r\n                onClick={startCamera}\r\n              >\r\n                Use Camera\r\n              </button>\r\n            </div>\r\n          )}\r\n        </div>\r\n        \r\n        {analysisResult && (\r\n          <div className=\"analysis-chat-section\">\r\n            <div className=\"analysis-results\">\r\n              <h3>Face Analysis Results</h3>\r\n              <p><strong>Skin Type:</strong> {analysisResult.skinType}</p>\r\n              <div className=\"features\">\r\n                <h4>Features:</h4>\r\n                <ul>\r\n                  {analysisResult.features.map((feature, index) => (\r\n                    <li key={index}>{feature}</li>\r\n                  ))}\r\n                </ul>\r\n              </div>\r\n              <div className=\"recommendations\">\r\n                <h4>Initial Recommendations:</h4>\r\n                <ul>\r\n                  {analysisResult.recommendations.map((rec, index) => (\r\n                    <li key={index}>{rec}</li>\r\n                  ))}\r\n                </ul>\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"chat-container\">\r\n              <h3>Ask Beauty Assistant</h3>\r\n              <div className=\"chat-messages\">\r\n                {chatMessages.map((msg, index) => (\r\n                  <div key={index} className={`message ${msg.sender}`}>\r\n                    <p>{msg.text}</p>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n              \r\n              <form onSubmit={handleChatSubmit} className=\"chat-input\">\r\n                <input\r\n                  type=\"text\"\r\n                  value={userMessage}\r\n                  onChange={(e) => setUserMessage(e.target.value)}\r\n                  placeholder=\"Ask about your facial features...\"\r\n                  className=\"chat-text-input\"\r\n                />\r\n                <button type=\"submit\" className=\"chat-send-btn\">Send</button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}