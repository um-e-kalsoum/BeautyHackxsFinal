{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\hackathon2\\\\beautyhackxs\\\\src\\\\components\\\\Ingredients.js\",\n  _s = $RefreshSig$();\nimport { useState, useRef, useEffect } from 'react';\nimport { Html5Qrcode } from 'html5-qrcode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Ingredients() {\n  _s();\n  const [barcode, setBarcode] = useState('');\n  const [isScanning, setIsScanning] = useState(false);\n  const [productInfo, setProductInfo] = useState(null);\n  const [chatMessages, setChatMessages] = useState([{\n    role: 'assistant',\n    content: 'Scan a product barcode to get started! I can answer questions about the ingredients.'\n  }]);\n  const [userMessage, setUserMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const scannerRef = useRef(null);\n  const chatContainerRef = useRef(null);\n\n  // Mock product database\n  const productDatabase = {\n    '123456789012': {\n      name: 'Sample Face Cream',\n      brand: 'Beauty Brand',\n      ingredients: [{\n        name: 'Water',\n        purpose: 'Base',\n        concerns: []\n      }, {\n        name: 'Glycerin',\n        purpose: 'Moisturizer',\n        concerns: []\n      }, {\n        name: 'Cetearyl Alcohol',\n        purpose: 'Emulsifier',\n        concerns: ['May cause irritation in sensitive skin']\n      }, {\n        name: 'Dimethicone',\n        purpose: 'Silicone',\n        concerns: ['Environmental concerns', 'Can trap bacteria']\n      }, {\n        name: 'Fragrance',\n        purpose: 'Scent',\n        concerns: ['Common allergen', 'Potentially irritating']\n      }]\n    },\n    '987654321098': {\n      name: 'Natural Serum',\n      brand: 'Eco Beauty',\n      ingredients: [{\n        name: 'Aloe Vera Juice',\n        purpose: 'Soothing base',\n        concerns: []\n      }, {\n        name: 'Hyaluronic Acid',\n        purpose: 'Hydration',\n        concerns: []\n      }, {\n        name: 'Vitamin C',\n        purpose: 'Brightening',\n        concerns: ['Can be unstable in formulations']\n      }, {\n        name: 'Rosehip Oil',\n        purpose: 'Nourishing',\n        concerns: []\n      }]\n    }\n  };\n  useEffect(() => {\n    // Scroll to the bottom of chat when new messages are added\n    if (chatContainerRef.current) {\n      chatContainerRef.current.scrollTop = chatContainerRef.current.scrollHeight;\n    }\n  }, [chatMessages]);\n  const startScanner = () => {\n    const html5QrCode = new Html5Qrcode(\"scanner\");\n    setIsScanning(true);\n    html5QrCode.start({\n      facingMode: \"environment\"\n    }, {\n      fps: 10,\n      qrbox: {\n        width: 250,\n        height: 250\n      }\n    }, decodedText => {\n      // On successful scan\n      html5QrCode.stop();\n      setIsScanning(false);\n      setBarcode(decodedText);\n\n      // Look up product in our database\n      handleProductLookup(decodedText);\n    }, errorMessage => {\n      // Just continue scanning, don't show errors to user\n      console.log(errorMessage);\n    }).catch(err => {\n      console.error(\"Scanner start error:\", err);\n      setIsScanning(false);\n    });\n    scannerRef.current = html5QrCode;\n  };\n  const stopScanner = () => {\n    if (scannerRef.current) {\n      scannerRef.current.stop().then(() => {\n        setIsScanning(false);\n      }).catch(err => {\n        console.error(\"Scanner stop error:\", err);\n      });\n    }\n  };\n  const handleProductLookup = code => {\n    // In a real app, this would be an API call to a product database\n    setIsLoading(true);\n    setTimeout(() => {\n      const product = productDatabase[code] || {\n        name: 'Unknown Product',\n        brand: 'Unknown Brand',\n        ingredients: [{\n          name: 'Ingredient data not found',\n          purpose: '',\n          concerns: []\n        }]\n      };\n      setProductInfo(product);\n\n      // Add a message to the chat\n      setChatMessages(prev => [...prev, {\n        role: 'assistant',\n        content: `Scanned product: ${product.name} by ${product.brand}.\\nI can answer questions about the ingredients. What would you like to know?`\n      }]);\n      setIsLoading(false);\n    }, 1500);\n  };\n  const handleChatSubmit = e => {\n    e.preventDefault();\n    if (!userMessage.trim()) return;\n\n    // Add user message to chat\n    setChatMessages(prev => [...prev, {\n      role: 'user',\n      content: userMessage\n    }]);\n\n    // Clear input field\n    setUserMessage('');\n\n    // Set loading state\n    setIsLoading(true);\n\n    // In a real implementation, this would be a call to the Gemini API\n    // For now, we'll simulate a response\n    setTimeout(() => {\n      let response = \"I don't have information about this product yet. Please try scanning another product.\";\n      if (productInfo) {\n        // Basic responses based on common questions\n        if (userMessage.toLowerCase().includes('harmful')) {\n          const harmfulIngredients = productInfo.ingredients.filter(i => i.concerns.length > 0);\n          if (harmfulIngredients.length > 0) {\n            response = `I found ${harmfulIngredients.length} ingredients with potential concerns:\\n` + harmfulIngredients.map(i => `• ${i.name}: ${i.concerns.join(', ')}`).join('\\n');\n          } else {\n            response = \"I didn't identify any ingredients with known concerns in this product.\";\n          }\n        } else if (userMessage.toLowerCase().includes('ingredient')) {\n          response = `This product contains ${productInfo.ingredients.length} ingredients:\\n` + productInfo.ingredients.map(i => `• ${i.name}`).join('\\n');\n        } else if (userMessage.toLowerCase().includes('purpose') || userMessage.toLowerCase().includes('what does') || userMessage.toLowerCase().includes('what is')) {\n          response = \"Here's what each ingredient does:\\n\" + productInfo.ingredients.map(i => `• ${i.name}: ${i.purpose}`).join('\\n');\n        } else {\n          response = \"I can tell you about the ingredients in this product. You can ask if any ingredients are harmful, what each ingredient does, or for a full ingredient list.\";\n        }\n      }\n\n      // Add assistant response to chat\n      setChatMessages(prev => [...prev, {\n        role: 'assistant',\n        content: response\n      }]);\n      setIsLoading(false);\n    }, 1500);\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"ingredients-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Ingredient Checker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Scan a product barcode to check ingredients and ask questions about them.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scanner-chat-layout\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"scanner-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"scanner\",\n          className: \"scanner-container\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"scanner-controls\",\n          children: !isScanning ? /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn primary-btn\",\n            onClick: startScanner,\n            children: \"Start Barcode Scanner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn secondary-btn\",\n            onClick: stopScanner,\n            children: \"Stop Scanner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this), barcode && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"barcode-result\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Barcode: \", barcode]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 15\n          }, this), productInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"product-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: productInfo.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Brand: \", productInfo.brand]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Beauty Buddy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Ask about the ingredients in your scanned products\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-container\",\n          ref: chatContainerRef,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-messages\",\n            children: [chatMessages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `message ${message.role}`,\n              children: message.content\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 17\n            }, this)), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message assistant loading\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"loading-dot\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"loading-dot\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"loading-dot\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleChatSubmit,\n          className: \"chat-input-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: userMessage,\n            onChange: e => setUserMessage(e.target.value),\n            placeholder: \"Ask about the ingredients...\",\n            className: \"chat-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"chat-submit\",\n            disabled: isLoading,\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 175,\n    columnNumber: 5\n  }, this);\n}\n_s(Ingredients, \"fAYy0vLUw5ZHLCyC6X4prVtdmls=\");\n_c = Ingredients;\nvar _c;\n$RefreshReg$(_c, \"Ingredients\");","map":{"version":3,"names":["useState","useRef","useEffect","Html5Qrcode","jsxDEV","_jsxDEV","Ingredients","_s","barcode","setBarcode","isScanning","setIsScanning","productInfo","setProductInfo","chatMessages","setChatMessages","role","content","userMessage","setUserMessage","isLoading","setIsLoading","scannerRef","chatContainerRef","productDatabase","name","brand","ingredients","purpose","concerns","current","scrollTop","scrollHeight","startScanner","html5QrCode","start","facingMode","fps","qrbox","width","height","decodedText","stop","handleProductLookup","errorMessage","console","log","catch","err","error","stopScanner","then","code","setTimeout","product","prev","handleChatSubmit","e","preventDefault","trim","response","toLowerCase","includes","harmfulIngredients","filter","i","length","map","join","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","onClick","ref","message","index","onSubmit","type","value","onChange","target","placeholder","disabled","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/hackathon2/beautyhackxs/src/components/Ingredients.js"],"sourcesContent":["import { useState, useRef, useEffect } from 'react';\nimport { Html5Qrcode } from 'html5-qrcode';\n\nexport default function Ingredients() {\n  const [barcode, setBarcode] = useState('');\n  const [isScanning, setIsScanning] = useState(false);\n  const [productInfo, setProductInfo] = useState(null);\n  const [chatMessages, setChatMessages] = useState([\n    { role: 'assistant', content: 'Scan a product barcode to get started! I can answer questions about the ingredients.' }\n  ]);\n  const [userMessage, setUserMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  \n  const scannerRef = useRef(null);\n  const chatContainerRef = useRef(null);\n  \n  // Mock product database\n  const productDatabase = {\n    '123456789012': {\n      name: 'Sample Face Cream',\n      brand: 'Beauty Brand',\n      ingredients: [\n        { name: 'Water', purpose: 'Base', concerns: [] },\n        { name: 'Glycerin', purpose: 'Moisturizer', concerns: [] },\n        { name: 'Cetearyl Alcohol', purpose: 'Emulsifier', concerns: ['May cause irritation in sensitive skin'] },\n        { name: 'Dimethicone', purpose: 'Silicone', concerns: ['Environmental concerns', 'Can trap bacteria'] },\n        { name: 'Fragrance', purpose: 'Scent', concerns: ['Common allergen', 'Potentially irritating'] }\n      ]\n    },\n    '987654321098': {\n      name: 'Natural Serum',\n      brand: 'Eco Beauty',\n      ingredients: [\n        { name: 'Aloe Vera Juice', purpose: 'Soothing base', concerns: [] },\n        { name: 'Hyaluronic Acid', purpose: 'Hydration', concerns: [] },\n        { name: 'Vitamin C', purpose: 'Brightening', concerns: ['Can be unstable in formulations'] },\n        { name: 'Rosehip Oil', purpose: 'Nourishing', concerns: [] }\n      ]\n    }\n  };\n  \n  useEffect(() => {\n    // Scroll to the bottom of chat when new messages are added\n    if (chatContainerRef.current) {\n      chatContainerRef.current.scrollTop = chatContainerRef.current.scrollHeight;\n    }\n  }, [chatMessages]);\n  \n  const startScanner = () => {\n    const html5QrCode = new Html5Qrcode(\"scanner\");\n    \n    setIsScanning(true);\n    \n    html5QrCode.start(\n      { facingMode: \"environment\" },\n      {\n        fps: 10,\n        qrbox: { width: 250, height: 250 }\n      },\n      (decodedText) => {\n        // On successful scan\n        html5QrCode.stop();\n        setIsScanning(false);\n        setBarcode(decodedText);\n        \n        // Look up product in our database\n        handleProductLookup(decodedText);\n      },\n      (errorMessage) => {\n        // Just continue scanning, don't show errors to user\n        console.log(errorMessage);\n      }\n    ).catch(err => {\n      console.error(\"Scanner start error:\", err);\n      setIsScanning(false);\n    });\n    \n    scannerRef.current = html5QrCode;\n  };\n  \n  const stopScanner = () => {\n    if (scannerRef.current) {\n      scannerRef.current.stop()\n        .then(() => {\n          setIsScanning(false);\n        })\n        .catch(err => {\n          console.error(\"Scanner stop error:\", err);\n        });\n    }\n  };\n  \n  const handleProductLookup = (code) => {\n    // In a real app, this would be an API call to a product database\n    setIsLoading(true);\n    \n    setTimeout(() => {\n      const product = productDatabase[code] || {\n        name: 'Unknown Product',\n        brand: 'Unknown Brand',\n        ingredients: [\n          { name: 'Ingredient data not found', purpose: '', concerns: [] }\n        ]\n      };\n      \n      setProductInfo(product);\n      \n      // Add a message to the chat\n      setChatMessages(prev => [\n        ...prev,\n        { \n          role: 'assistant', \n          content: `Scanned product: ${product.name} by ${product.brand}.\\nI can answer questions about the ingredients. What would you like to know?` \n        }\n      ]);\n      \n      setIsLoading(false);\n    }, 1500);\n  };\n  \n  const handleChatSubmit = (e) => {\n    e.preventDefault();\n    \n    if (!userMessage.trim()) return;\n    \n    // Add user message to chat\n    setChatMessages(prev => [\n      ...prev,\n      { role: 'user', content: userMessage }\n    ]);\n    \n    // Clear input field\n    setUserMessage('');\n    \n    // Set loading state\n    setIsLoading(true);\n    \n    // In a real implementation, this would be a call to the Gemini API\n    // For now, we'll simulate a response\n    setTimeout(() => {\n      let response = \"I don't have information about this product yet. Please try scanning another product.\";\n      \n      if (productInfo) {\n        // Basic responses based on common questions\n        if (userMessage.toLowerCase().includes('harmful')) {\n          const harmfulIngredients = productInfo.ingredients.filter(i => i.concerns.length > 0);\n          if (harmfulIngredients.length > 0) {\n            response = `I found ${harmfulIngredients.length} ingredients with potential concerns:\\n` +\n              harmfulIngredients.map(i => `• ${i.name}: ${i.concerns.join(', ')}`).join('\\n');\n          } else {\n            response = \"I didn't identify any ingredients with known concerns in this product.\";\n          }\n        } else if (userMessage.toLowerCase().includes('ingredient')) {\n          response = `This product contains ${productInfo.ingredients.length} ingredients:\\n` +\n            productInfo.ingredients.map(i => `• ${i.name}`).join('\\n');\n        } else if (userMessage.toLowerCase().includes('purpose') || userMessage.toLowerCase().includes('what does') || userMessage.toLowerCase().includes('what is')) {\n          response = \"Here's what each ingredient does:\\n\" +\n            productInfo.ingredients.map(i => `• ${i.name}: ${i.purpose}`).join('\\n');\n        } else {\n          response = \"I can tell you about the ingredients in this product. You can ask if any ingredients are harmful, what each ingredient does, or for a full ingredient list.\";\n        }\n      }\n      \n      // Add assistant response to chat\n      setChatMessages(prev => [\n        ...prev,\n        { role: 'assistant', content: response }\n      ]);\n      \n      setIsLoading(false);\n    }, 1500);\n  };\n  \n  return (\n    <section className=\"ingredients-container\">\n      <h1>Ingredient Checker</h1>\n      <p>Scan a product barcode to check ingredients and ask questions about them.</p>\n      \n      <div className=\"scanner-chat-layout\">\n        <div className=\"scanner-section\">\n          <div id=\"scanner\" className=\"scanner-container\"></div>\n          \n          <div className=\"scanner-controls\">\n            {!isScanning ? (\n              <button className=\"btn primary-btn\" onClick={startScanner}>\n                Start Barcode Scanner\n              </button>\n            ) : (\n              <button className=\"btn secondary-btn\" onClick={stopScanner}>\n                Stop Scanner\n              </button>\n            )}\n          </div>\n          \n          {barcode && (\n            <div className=\"barcode-result\">\n              <p>Barcode: {barcode}</p>\n              {productInfo && (\n                <div className=\"product-info\">\n                  <h3>{productInfo.name}</h3>\n                  <p>Brand: {productInfo.brand}</p>\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n        \n        <div className=\"chat-section\">\n          <h2>Beauty Buddy</h2>\n          <p>Ask about the ingredients in your scanned products</p>\n          \n          <div className=\"chat-container\" ref={chatContainerRef}>\n            <div className=\"chat-messages\">\n              {chatMessages.map((message, index) => (\n                <div key={index} className={`message ${message.role}`}>\n                  {message.content}\n                </div>\n              ))}\n              {isLoading && (\n                <div className=\"message assistant loading\">\n                  <span className=\"loading-dot\"></span>\n                  <span className=\"loading-dot\"></span>\n                  <span className=\"loading-dot\"></span>\n                </div>\n              )}\n            </div>\n          </div>\n          \n          <form onSubmit={handleChatSubmit} className=\"chat-input-form\">\n            <input\n              type=\"text\"\n              value={userMessage}\n              onChange={(e) => setUserMessage(e.target.value)}\n              placeholder=\"Ask about the ingredients...\"\n              className=\"chat-input\"\n            />\n            <button type=\"submit\" className=\"chat-submit\" disabled={isLoading}>\n              Send\n            </button>\n          </form>\n        </div>\n      </div>\n    </section>\n  );\n}\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AACnD,SAASC,WAAW,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,eAAe,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACpC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACU,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACY,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACc,YAAY,EAAEC,eAAe,CAAC,GAAGf,QAAQ,CAAC,CAC/C;IAAEgB,IAAI,EAAE,WAAW;IAAEC,OAAO,EAAE;EAAuF,CAAC,CACvH,CAAC;EACF,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACoB,SAAS,EAAEC,YAAY,CAAC,GAAGrB,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMsB,UAAU,GAAGrB,MAAM,CAAC,IAAI,CAAC;EAC/B,MAAMsB,gBAAgB,GAAGtB,MAAM,CAAC,IAAI,CAAC;;EAErC;EACA,MAAMuB,eAAe,GAAG;IACtB,cAAc,EAAE;MACdC,IAAI,EAAE,mBAAmB;MACzBC,KAAK,EAAE,cAAc;MACrBC,WAAW,EAAE,CACX;QAAEF,IAAI,EAAE,OAAO;QAAEG,OAAO,EAAE,MAAM;QAAEC,QAAQ,EAAE;MAAG,CAAC,EAChD;QAAEJ,IAAI,EAAE,UAAU;QAAEG,OAAO,EAAE,aAAa;QAAEC,QAAQ,EAAE;MAAG,CAAC,EAC1D;QAAEJ,IAAI,EAAE,kBAAkB;QAAEG,OAAO,EAAE,YAAY;QAAEC,QAAQ,EAAE,CAAC,wCAAwC;MAAE,CAAC,EACzG;QAAEJ,IAAI,EAAE,aAAa;QAAEG,OAAO,EAAE,UAAU;QAAEC,QAAQ,EAAE,CAAC,wBAAwB,EAAE,mBAAmB;MAAE,CAAC,EACvG;QAAEJ,IAAI,EAAE,WAAW;QAAEG,OAAO,EAAE,OAAO;QAAEC,QAAQ,EAAE,CAAC,iBAAiB,EAAE,wBAAwB;MAAE,CAAC;IAEpG,CAAC;IACD,cAAc,EAAE;MACdJ,IAAI,EAAE,eAAe;MACrBC,KAAK,EAAE,YAAY;MACnBC,WAAW,EAAE,CACX;QAAEF,IAAI,EAAE,iBAAiB;QAAEG,OAAO,EAAE,eAAe;QAAEC,QAAQ,EAAE;MAAG,CAAC,EACnE;QAAEJ,IAAI,EAAE,iBAAiB;QAAEG,OAAO,EAAE,WAAW;QAAEC,QAAQ,EAAE;MAAG,CAAC,EAC/D;QAAEJ,IAAI,EAAE,WAAW;QAAEG,OAAO,EAAE,aAAa;QAAEC,QAAQ,EAAE,CAAC,iCAAiC;MAAE,CAAC,EAC5F;QAAEJ,IAAI,EAAE,aAAa;QAAEG,OAAO,EAAE,YAAY;QAAEC,QAAQ,EAAE;MAAG,CAAC;IAEhE;EACF,CAAC;EAED3B,SAAS,CAAC,MAAM;IACd;IACA,IAAIqB,gBAAgB,CAACO,OAAO,EAAE;MAC5BP,gBAAgB,CAACO,OAAO,CAACC,SAAS,GAAGR,gBAAgB,CAACO,OAAO,CAACE,YAAY;IAC5E;EACF,CAAC,EAAE,CAAClB,YAAY,CAAC,CAAC;EAElB,MAAMmB,YAAY,GAAGA,CAAA,KAAM;IACzB,MAAMC,WAAW,GAAG,IAAI/B,WAAW,CAAC,SAAS,CAAC;IAE9CQ,aAAa,CAAC,IAAI,CAAC;IAEnBuB,WAAW,CAACC,KAAK,CACf;MAAEC,UAAU,EAAE;IAAc,CAAC,EAC7B;MACEC,GAAG,EAAE,EAAE;MACPC,KAAK,EAAE;QAAEC,KAAK,EAAE,GAAG;QAAEC,MAAM,EAAE;MAAI;IACnC,CAAC,EACAC,WAAW,IAAK;MACf;MACAP,WAAW,CAACQ,IAAI,CAAC,CAAC;MAClB/B,aAAa,CAAC,KAAK,CAAC;MACpBF,UAAU,CAACgC,WAAW,CAAC;;MAEvB;MACAE,mBAAmB,CAACF,WAAW,CAAC;IAClC,CAAC,EACAG,YAAY,IAAK;MAChB;MACAC,OAAO,CAACC,GAAG,CAACF,YAAY,CAAC;IAC3B,CACF,CAAC,CAACG,KAAK,CAACC,GAAG,IAAI;MACbH,OAAO,CAACI,KAAK,CAAC,sBAAsB,EAAED,GAAG,CAAC;MAC1CrC,aAAa,CAAC,KAAK,CAAC;IACtB,CAAC,CAAC;IAEFW,UAAU,CAACQ,OAAO,GAAGI,WAAW;EAClC,CAAC;EAED,MAAMgB,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAI5B,UAAU,CAACQ,OAAO,EAAE;MACtBR,UAAU,CAACQ,OAAO,CAACY,IAAI,CAAC,CAAC,CACtBS,IAAI,CAAC,MAAM;QACVxC,aAAa,CAAC,KAAK,CAAC;MACtB,CAAC,CAAC,CACDoC,KAAK,CAACC,GAAG,IAAI;QACZH,OAAO,CAACI,KAAK,CAAC,qBAAqB,EAAED,GAAG,CAAC;MAC3C,CAAC,CAAC;IACN;EACF,CAAC;EAED,MAAML,mBAAmB,GAAIS,IAAI,IAAK;IACpC;IACA/B,YAAY,CAAC,IAAI,CAAC;IAElBgC,UAAU,CAAC,MAAM;MACf,MAAMC,OAAO,GAAG9B,eAAe,CAAC4B,IAAI,CAAC,IAAI;QACvC3B,IAAI,EAAE,iBAAiB;QACvBC,KAAK,EAAE,eAAe;QACtBC,WAAW,EAAE,CACX;UAAEF,IAAI,EAAE,2BAA2B;UAAEG,OAAO,EAAE,EAAE;UAAEC,QAAQ,EAAE;QAAG,CAAC;MAEpE,CAAC;MAEDhB,cAAc,CAACyC,OAAO,CAAC;;MAEvB;MACAvC,eAAe,CAACwC,IAAI,IAAI,CACtB,GAAGA,IAAI,EACP;QACEvC,IAAI,EAAE,WAAW;QACjBC,OAAO,EAAE,oBAAoBqC,OAAO,CAAC7B,IAAI,OAAO6B,OAAO,CAAC5B,KAAK;MAC/D,CAAC,CACF,CAAC;MAEFL,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;EAED,MAAMmC,gBAAgB,GAAIC,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,IAAI,CAACxC,WAAW,CAACyC,IAAI,CAAC,CAAC,EAAE;;IAEzB;IACA5C,eAAe,CAACwC,IAAI,IAAI,CACtB,GAAGA,IAAI,EACP;MAAEvC,IAAI,EAAE,MAAM;MAAEC,OAAO,EAAEC;IAAY,CAAC,CACvC,CAAC;;IAEF;IACAC,cAAc,CAAC,EAAE,CAAC;;IAElB;IACAE,YAAY,CAAC,IAAI,CAAC;;IAElB;IACA;IACAgC,UAAU,CAAC,MAAM;MACf,IAAIO,QAAQ,GAAG,uFAAuF;MAEtG,IAAIhD,WAAW,EAAE;QACf;QACA,IAAIM,WAAW,CAAC2C,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,SAAS,CAAC,EAAE;UACjD,MAAMC,kBAAkB,GAAGnD,WAAW,CAACe,WAAW,CAACqC,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACpC,QAAQ,CAACqC,MAAM,GAAG,CAAC,CAAC;UACrF,IAAIH,kBAAkB,CAACG,MAAM,GAAG,CAAC,EAAE;YACjCN,QAAQ,GAAG,WAAWG,kBAAkB,CAACG,MAAM,yCAAyC,GACtFH,kBAAkB,CAACI,GAAG,CAACF,CAAC,IAAI,KAAKA,CAAC,CAACxC,IAAI,KAAKwC,CAAC,CAACpC,QAAQ,CAACuC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAACA,IAAI,CAAC,IAAI,CAAC;UACnF,CAAC,MAAM;YACLR,QAAQ,GAAG,wEAAwE;UACrF;QACF,CAAC,MAAM,IAAI1C,WAAW,CAAC2C,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,YAAY,CAAC,EAAE;UAC3DF,QAAQ,GAAG,yBAAyBhD,WAAW,CAACe,WAAW,CAACuC,MAAM,iBAAiB,GACjFtD,WAAW,CAACe,WAAW,CAACwC,GAAG,CAACF,CAAC,IAAI,KAAKA,CAAC,CAACxC,IAAI,EAAE,CAAC,CAAC2C,IAAI,CAAC,IAAI,CAAC;QAC9D,CAAC,MAAM,IAAIlD,WAAW,CAAC2C,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,SAAS,CAAC,IAAI5C,WAAW,CAAC2C,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,WAAW,CAAC,IAAI5C,WAAW,CAAC2C,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,SAAS,CAAC,EAAE;UAC5JF,QAAQ,GAAG,qCAAqC,GAC9ChD,WAAW,CAACe,WAAW,CAACwC,GAAG,CAACF,CAAC,IAAI,KAAKA,CAAC,CAACxC,IAAI,KAAKwC,CAAC,CAACrC,OAAO,EAAE,CAAC,CAACwC,IAAI,CAAC,IAAI,CAAC;QAC5E,CAAC,MAAM;UACLR,QAAQ,GAAG,6JAA6J;QAC1K;MACF;;MAEA;MACA7C,eAAe,CAACwC,IAAI,IAAI,CACtB,GAAGA,IAAI,EACP;QAAEvC,IAAI,EAAE,WAAW;QAAEC,OAAO,EAAE2C;MAAS,CAAC,CACzC,CAAC;MAEFvC,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;EAED,oBACEhB,OAAA;IAASgE,SAAS,EAAC,uBAAuB;IAAAC,QAAA,gBACxCjE,OAAA;MAAAiE,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3BrE,OAAA;MAAAiE,QAAA,EAAG;IAAyE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAEhFrE,OAAA;MAAKgE,SAAS,EAAC,qBAAqB;MAAAC,QAAA,gBAClCjE,OAAA;QAAKgE,SAAS,EAAC,iBAAiB;QAAAC,QAAA,gBAC9BjE,OAAA;UAAKsE,EAAE,EAAC,SAAS;UAACN,SAAS,EAAC;QAAmB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAEtDrE,OAAA;UAAKgE,SAAS,EAAC,kBAAkB;UAAAC,QAAA,EAC9B,CAAC5D,UAAU,gBACVL,OAAA;YAAQgE,SAAS,EAAC,iBAAiB;YAACO,OAAO,EAAE3C,YAAa;YAAAqC,QAAA,EAAC;UAE3D;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,gBAETrE,OAAA;YAAQgE,SAAS,EAAC,mBAAmB;YAACO,OAAO,EAAE1B,WAAY;YAAAoB,QAAA,EAAC;UAE5D;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QACT;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,EAELlE,OAAO,iBACNH,OAAA;UAAKgE,SAAS,EAAC,gBAAgB;UAAAC,QAAA,gBAC7BjE,OAAA;YAAAiE,QAAA,GAAG,WAAS,EAAC9D,OAAO;UAAA;YAAA+D,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,EACxB9D,WAAW,iBACVP,OAAA;YAAKgE,SAAS,EAAC,cAAc;YAAAC,QAAA,gBAC3BjE,OAAA;cAAAiE,QAAA,EAAK1D,WAAW,CAACa;YAAI;cAAA8C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAC3BrE,OAAA;cAAAiE,QAAA,GAAG,SAAO,EAAC1D,WAAW,CAACc,KAAK;YAAA;cAAA6C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC9B,CACN;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CACN;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eAENrE,OAAA;QAAKgE,SAAS,EAAC,cAAc;QAAAC,QAAA,gBAC3BjE,OAAA;UAAAiE,QAAA,EAAI;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACrBrE,OAAA;UAAAiE,QAAA,EAAG;QAAkD;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eAEzDrE,OAAA;UAAKgE,SAAS,EAAC,gBAAgB;UAACQ,GAAG,EAAEtD,gBAAiB;UAAA+C,QAAA,eACpDjE,OAAA;YAAKgE,SAAS,EAAC,eAAe;YAAAC,QAAA,GAC3BxD,YAAY,CAACqD,GAAG,CAAC,CAACW,OAAO,EAAEC,KAAK,kBAC/B1E,OAAA;cAAiBgE,SAAS,EAAE,WAAWS,OAAO,CAAC9D,IAAI,EAAG;cAAAsD,QAAA,EACnDQ,OAAO,CAAC7D;YAAO,GADR8D,KAAK;cAAAR,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAEV,CACN,CAAC,EACDtD,SAAS,iBACRf,OAAA;cAAKgE,SAAS,EAAC,2BAA2B;cAAAC,QAAA,gBACxCjE,OAAA;gBAAMgE,SAAS,EAAC;cAAa;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eACrCrE,OAAA;gBAAMgE,SAAS,EAAC;cAAa;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eACrCrE,OAAA;gBAAMgE,SAAS,EAAC;cAAa;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClC,CACN;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eAENrE,OAAA;UAAM2E,QAAQ,EAAExB,gBAAiB;UAACa,SAAS,EAAC,iBAAiB;UAAAC,QAAA,gBAC3DjE,OAAA;YACE4E,IAAI,EAAC,MAAM;YACXC,KAAK,EAAEhE,WAAY;YACnBiE,QAAQ,EAAG1B,CAAC,IAAKtC,cAAc,CAACsC,CAAC,CAAC2B,MAAM,CAACF,KAAK,CAAE;YAChDG,WAAW,EAAC,8BAA8B;YAC1ChB,SAAS,EAAC;UAAY;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACvB,CAAC,eACFrE,OAAA;YAAQ4E,IAAI,EAAC,QAAQ;YAACZ,SAAS,EAAC,aAAa;YAACiB,QAAQ,EAAElE,SAAU;YAAAkD,QAAA,EAAC;UAEnE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEd;AAACnE,EAAA,CAjPuBD,WAAW;AAAAiF,EAAA,GAAXjF,WAAW;AAAA,IAAAiF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}